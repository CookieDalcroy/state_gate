# frozen_string_literal: true

module StateGate
  class Engine
    ##
    # = Description
    #
    # Provides scope helper methods for StateGate::Engine.
    #
    module Scoper

      # ======================================================================
      #   Configuration Methods
      # ======================================================================

      # Disables the generation of Class Scope helpers methods
      #
      #   no_scopes
      #
      def no_scopes
        @scopes = false
      end



      # Generate the scope name to use for each state.
      #
      def generate_scope_names
        @states.each do |state, opts|
          opts[:scope_name] = "#{@prefix}#{state}#{@suffix}"
        end # each state
      end # generate_sequences



      # ======================================================================
      #   Helper Methods
      # ======================================================================

      ##
      # Returns TRUE if scope methods should be added to the model, otherwise FALSE.
      #
      #   .include_scopes?  # => true
      #
      def include_scopes?
        !!@scopes
      end



      ##
      # Returns the scope name for the given state. Scope names are generated by
      # concatenating the prefix, state name and suffix
      #
      #   .scope_name_for_state(:active)      # => 'active'
      #   .scope_name_for_state(:pending)     # => 'pending_status'
      #   .scope_name_for_state(:archived)    # => 'with_archived_status'
      #
      def scope_name_for_state(state_name = nil)
        state = assert_valid_state!(state_name)
        @states[state][:scope_name]
      end

    end # Sequencer
  end # Engine
end # StateGate
